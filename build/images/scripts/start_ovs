#!/usr/bin/env bash

source logging

set -euo pipefail

declare -r ovs_container_name="okn-ovs"

function stop_ovs {
    /usr/share/openvswitch/scripts/ovs-ctl stop
}

SLEEP_PID=

function quit {
    log_info $ovs_container_name "Stopping OVS agents before quit"
    stop_ovs
    # kill background sleep process
    if [ "$SLEEP_PID" != "" ]; then kill $SLEEP_PID > /dev/null 2>&1 || true; fi
    exit 0
}

# Do not trap EXIT as it would then ignore the "exit 0" statement in quit and
# exit with code 128 + SIGNAL
trap "quit" INT TERM

function get_ovs_status {
    # Verifies that OVS agents are running
    /usr/share/openvswitch/scripts/ovs-ctl status > /dev/null
    if [ $? != 0 ]; then
        echo "stopped"
    else
        echo "running"
    fi
}

log_info $ovs_container_name "Started the loop that checks OVS status every 30 seconds"
while true; do
    if [ $(get_ovs_status) == "stopped" ]; then
        # OVS was stopped in the container.
        log_warning $ovs_container_name "OVS was stopped in the container. Starting it again"

        /usr/share/openvswitch/scripts/ovs-ctl --system-id=random start
        log_info $ovs_container_name "Started OVS in this container"
    fi
    # we run sleep in the background so that we can immediately exit when we
    # receive SIGINT / SIGTERM
    # see https://stackoverflow.com/questions/32041674/linux-how-to-kill-sleep
    sleep 30 &
    SLEEP_PID=$!
    wait $SLEEP_PID
done
